docker build -t frontend .
docker tag frontend juhosii/devops-kubernetes:4.05.1
docker push juhosii/devops-kubernetes:4.05.1

docker build -t backend .
docker tag backend juhosii/devops-kubernetes:4.05.2
docker push juhosii/devops-kubernetes:4.05.2

kubectl config use-context k3d-k3s-default
k3d cluster create --port 8082:30080@agent:0 -p 8081:80@loadbalancer --agents 2
docker exec k3d-k3s-default-agent-0 mkdir -p /tmp/kube

""""""""""""""""""""""""""""""""""""""""""""""""""""" LOGGING
kubectl create namespace prometheus
helm install prometheus-community/kube-prometheus-stack --generate-name --namespace prometheus
kubectl get po -n prometheus
kubectl -n prometheus port-forward kube-prometheus-stack-1730846032-grafana-6b8d54f9d6-nztp8 3000

helm repo add grafana https://grafana.github.io/helm-charts
helm repo update
kubectl create namespace loki-stack
helm upgrade --install loki --namespace=loki-stack grafana/loki-stack

kubectl -n prometheus port-forward prometheus-kube-prometheus-stack-1731-prometheus-0 9090:9090

helm install nginx-ingress ingress-nginx/ingress-nginx

kubectl create namespace argo-rollouts
kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml

""""""""""""""""""""""""""""""""""""""""""""""""""""" LOGGING
kubectl create namespace project
kubens project

export SOPS_AGE_KEY_FILE=/home/juho/key.txt
sops --decrypt postgres-secret.enc.yaml > postgres-secret.yaml 

kubectl apply -k .

kubectl get pods
kubectl logs -f 

k3d cluster stop